#!/bin/python3

import math
import os
import random
import re
import sys

'''
Link to original problem:
https://www.hackerrank.com/challenges/organizing-containers-of-balls/problem
'''

'''
Intuitive Explanation:
The way this game is designed, each container holds a fixed number of balls. 
Pick any container i, which will start with n balls.  Thus, in order to satisfy 
the win condition, there must be at least one color such that the total number 
of balls of that particular color at the start is equal to n.  If not, there is
no way to fill that container with all balls of the same color with no balls of 
the same color in any other container.  As this must hold true for every single 
container, we necessarily have that the sum of the rows and the sum of the columns
i.e. the number of balls in each container and the number of balls of each color
must be an exact match. 
'''

#
# Complete the 'organizingContainers' function below.
#
# The function is expected to return a STRING.
# The function accepts 2D_INTEGER_ARRAY container as parameter.
#

def organizingContainers(container):
    n = len(container)
    sum_rows = [sum(row) for row in container]
    sum_cols = [sum(row[x] for row in container) for x in range(n)]
    sum_rows.sort()
    sum_cols.sort()
    if sum_rows == sum_cols:
        return 'Possible'
    return 'Impossible'

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    q = int(input().strip())

    for q_itr in range(q):
        n = int(input().strip())

        container = []

        for _ in range(n):
            container.append(list(map(int, input().rstrip().split())))

        result = organizingContainers(container)

        fptr.write(result + '\n')

    fptr.close()
