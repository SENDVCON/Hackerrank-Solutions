#!/bin/python3

import math
import os
import random
import re
import sys

#
# Complete the 'extraLongFactorials' function below.
#
# The function accepts INTEGER n as parameter.
#

def carryover (ls):
    for x in range(1, len(ls)):
        if ls[-x] >= 10:
            ls[-(x+1)] += ls[-x] // 10
            ls[-x] = ls[-x]%10
    return ls
            
def split_n(n):
    return [int(char) for char in str(n)]

def strip_l(ls):
    curr_index = 0
    for x in range(len(ls)):
        if ls[x] != 0:
            return ls[x:]
    return []

def extraLongFactorials(n):
    longer = [1]
    for p in range(2,n+1):
        digi_p = split_n(p)
        longer = [0 for x in range(len(digi_p))] + longer
        #print(longer)
        next_longer = [0 for x in range(len(longer))]
        for x in range(1,len(longer)-len(digi_p)+1):
            for y in range(len(digi_p)):
                digit_product = longer[-x]*digi_p[-(y+1)]
                next_longer[-(x+y)] += digit_product%10
                next_longer[-(x+y+1)] += digit_product//10
        longer = [next_longer[x] for x in range(len(longer))]
        longer = carryover(longer)
        longer = strip_l(longer)
    longer = [str(x) for x in longer]
    print (''.join(longer))
            
        

if __name__ == '__main__':
    n = int(input().strip())

    extraLongFactorials(n)
